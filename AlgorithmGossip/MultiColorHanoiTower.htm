<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>




  
  
  
  
  <link rel="stylesheet" href="css/stdlayout.css" type="text/css">




  
  
  
  
  <link rel="stylesheet" href="css/print.css" type="text/css">




  
  
  
  
  <meta content="text/html; charset=UTF-8" http-equiv="content-type">




  
  
  
  
  <title>雙色、三色河內塔</title>
</head>


<body>




<h3><a href="http://caterpillar.onlyfun.net/Gossip/index.html">From
Gossip@caterpillar</a></h3>




<h1><a href="AlgorithmGossip.htm">Algorithm Gossip:&nbsp;雙色、三色河內塔</a></h1>




<h2>說明</h2>
雙色河內塔與三色河內塔是由之前所介紹過的河內塔規則衍生而來，雙色河內塔的目的是將下圖左上的圓環位置經移動成為右下的圓環位置： <br>
<div style="text-align: center;"><img style="width: 381px; height: 141px;" alt="多色河內塔" title="多色河內塔" src="images/multiColorHanoiTower-1.jpg"><br>
<br>
<div style="text-align: left;">而三色河內塔則是將下圖左上的圓環經移動成為右上的圓環： <br>
<div style="text-align: center;"><img style="width: 381px; height: 141px;" alt="多色河內塔" title="多色河內塔" src="images/multiColorHanoiTower-2.jpg"><br>
</div>
<br>

在移動的過程中，一樣遵守大盤必須在小盤之下的規則，而顏色順序則無限制。 
<h2> 解法</h2>

無論是雙色河內塔或是三色河內塔，其解法觀念與之前介紹過的河內塔是類似的，同樣也是使用遞迴來解，不過這次遞迴解法的目的不同，我們先來看只有兩個
盤的情況，這很簡單，只要將第一柱的黃色移動至第二柱，而接下來第一柱的藍色移動至第三柱。 <br>

<br>
再來是四個盤的情況，首先必須用遞迴完成下圖左上至右下的移動： <br>
<div style="text-align: center;"><img style="width: 378px; height: 137px;" alt="多色河內塔" title="多色河內塔" src="images/multiColorHanoiTower-3.jpg"></div>
<br>
接下來最底層的就不用管它們了，因為它們已經就定位，只要再處理第一柱的上面兩個盤子就可以了。<br>
<br>
那麼六個盤的情況呢？一樣！首先必須用遞迴完成下圖左上至右下的移動： <br>
<div style="text-align: center;"><img style="width: 377px; height: 137px;" alt="多色河內塔" title="多色河內塔" src="images/multiColorHanoiTower-4.jpg"></div>
<br>
接下來最底層的就不用管它們了，因為它們已經就定位，只要再處理第一柱上面的四個盤子就可以了，這又與之前只有四盤的情況相同，接下來您就知道該如何進行解題了，無論是八個盤、十個盤以上等，都是用這個觀念來解題。<br>
<br>
那麼三色河內塔呢？一樣，直接來看九個盤的情況，首先必須完成下圖的移動結果：<br>
<div style="text-align: center;"><img style="width: 226px; height: 63px;" alt="多色河內塔" title="多色河內塔" src="images/multiColorHanoiTower-5.jpg"><br>
</div>
<br>
接下來最底兩層的就不用管它們了，因為它們已經就定位，只要再處理第一柱上面的三個盤子就可以了。<br>
<div style="text-align: center;"><img style="width: 223px; height: 62px;" alt="多色河內塔" title="多色河內塔" src="images/multiColorHanoiTower-6.jpg"></div>
<br>
您也可以看看 <a href="http://obelix.ee.duth.gr/%7Eapostolo/TowersOfHanoi/index.html">Towers of Hanoi Page</a> 中有關於河內塔的討論。<br>
<h2>&nbsp;實作</h2>
以下Java演算實例由 <a href="http://www.javaworld.com.tw">http://www.javaworld.com.tw</a> 的 <a href="http://www.javaworld.com.tw/jute/user/info?uid=3056">T5555</a> 提供，感謝他的協助，我根據他的實例，轉換為C語言的實作部份，您可以參考這個 <a href="http://www.javaworld.com.tw/jute/post/view?bid=29&amp;id=81268&amp;tpg=1&amp;ppg=1&amp;sty=0&amp;age=0#81268">討論串</a> 有關於河內塔的討論。<br>
<br>
<ul>
  <li> 雙色河內塔 C 實作
  </li>
</ul>

<pre>#include &lt;stdio.h&gt;<br><br>void hanoi(int disks, char source, char temp, char target) {<br>    if (disks == 1) {<br>        printf("move disk from %c to %c\n", source, target);<br>        printf("move disk from %c to %c\n", source, target);<br>    } else {<br>        hanoi(disks-1, source, target, temp);<br>        hanoi(1, source, temp, target);<br>        hanoi(disks-1, temp, source, target);<br>    }<br>}<br><br>void hanoi2colors(int disks) {<br>    char source = 'A';<br>    char temp = 'B';<br>    char target = 'C';<br>    int i;<br>    for(i = disks / 2; i &gt; 1; i--) {<br>        hanoi(i-1, source, temp, target);<br>        printf("move disk from %c to %c\n", source, temp);<br>        printf("move disk from %c to %c\n", source, temp);<br>        hanoi(i-1, target, temp, source);<br>        printf("move disk from %c to %c\n", temp, target);<br>    }<br>    printf("move disk from %c to %c\n", source, temp);<br>    printf("move disk from %c to %c\n", source, target);<br>}<br><br>int main() {<br>    int n;<br>    printf("請輸入盤數：");<br>    scanf("%d", &amp;n);<br><br>    hanoi2colors(n);<br><br>    return 0;<br>} <br></pre>

<br>

<ul>
  <li> 三色河內塔 C 實作
  </li>
</ul>

<pre>#include &lt;stdio.h&gt;<br><br>void hanoi(int disks, char source, char temp, char target) {<br>    if (disks == 1) {<br>        printf("move disk from %c to %c\n", source, target);<br>        printf("move disk from %c to %c\n", source, target);<br>        printf("move disk from %c to %c\n", source, target);<br>    } else {<br>        hanoi(disks-1, source, target, temp);<br>        hanoi(1, source, temp, target);<br>        hanoi(disks-1, temp, source, target);<br>    }<br>}<br><br>void hanoi3colors(int disks) {<br>    char source = 'A';<br>    char temp = 'B';<br>    char target = 'C';<br>    int i;<br><br>    if(disks == 3) {<br>        printf("move disk from %c to %c\n", source, temp);<br>        printf("move disk from %c to %c\n", source, temp);<br>        printf("move disk from %c to %c\n", source, target);<br>        printf("move disk from %c to %c\n", temp, target);<br>        printf("move disk from %c to %c\n", temp, source);<br>        printf("move disk from %c to %c\n", target, temp);;<br>    }<br>    else {<br>        hanoi(disks/3-1, source, temp, target);<br>        printf("move disk from %c to %c\n", source, temp);<br>        printf("move disk from %c to %c\n", source, temp);<br>        printf("move disk from %c to %c\n", source, temp);<br><br>        hanoi(disks/3-1, target, temp, source);<br>        printf("move disk from %c to %c\n", temp, target);<br>        printf("move disk from %c to %c\n", temp, target);<br>        printf("move disk from %c to %c\n", temp, target);<br><br>        hanoi(disks/3-1, source, target, temp);<br>        printf("move disk from %c to %c\n", target, source);<br>        printf("move disk from %c to %c\n", target, source);<br><br>        hanoi(disks/3-1, temp, source, target);<br>        printf("move disk from %c to %c\n", source, temp);<br>        <br>        for (i = disks / 3 - 1; i &gt; 0; i--) {<br>            if (i&gt;1) {<br>                hanoi(i-1, target, source, temp);<br>            }<br><br>            printf("move disk from %c to %c\n",<br>                                 target, source);<br>            printf("move disk from %c to %c\n",<br>                                 target, source);<br><br>            if (i&gt;1) {<br>                hanoi(i-1, temp, source, target);<br>            }<br>            printf("move disk from %c to %c\n", <br>                                   source, temp);<br>        }<br>    }<br>}<br><br>int main() {<br>    int n;<br>    printf("請輸入盤數：");<br>    scanf("%d", &amp;n);<br><br>    hanoi3colors(n);<br><br>    return 0;<br>} <br></pre>

<br>

<ul>
  <li> 雙色河內塔 Java 實作
  </li>
</ul>

<pre>public class Hanoi2Colors { <br>    public static void help() {<br>        System.out.println(<br>              "Usage: java Hanoi2Colors number_of_disks");<br>        System.out.println(<br>              "\t number_of_disks: must be a even number.");<br>        System.exit(0);<br>    }<br>    <br>    public static void main(String[] args) {<br>        int disks = 0;        <br>        try {<br>            disks = Integer.parseInt(args[0]);<br>        } catch (Exception e) {<br>            help();<br>        }<br>        if ((disks &lt;= 0) || (disks % 2 != 0)) { <br>            help(); <br>        }<br>        hanoi2colors(disks);<br>    }<br>     <br>    public static void hanoi(int disks, <br>                      char source, char temp, char target) {<br>        if (disks == 1) {<br>            System.out.println("move disk from " <br>                               + source + " to " + target);<br>            System.out.println("move disk from " <br>                               + source + " to " + target);<br>        } else {        <br>            hanoi(disks-1, source, target, temp);<br>            hanoi(1, source, temp, target);<br>            hanoi(disks-1, temp, source, target);<br>        }<br>    }<br> <br>    public static void hanoi2colors(int disks) {<br>        char source = 'A';<br>        char temp = 'B';<br>        char target = 'C';<br>        for (int i = disks / 2; i &gt; 1; i--) {<br>            hanoi(i-1, source, temp, target);<br>            System.out.println("move disk from " <br>                                   + source + " to " + temp);<br>            System.out.println("move disk from " <br>                                   + source + " to " + temp); <br>            hanoi(i-1, target, temp, source);<br>            System.out.println("move disk from " <br>                                   + temp + " to " + target);<br>        }<br>        System.out.println("move disk from " <br>                                   + source + " to " + temp);<br>        System.out.println("move disk from " <br>                                 + source + " to " + target);<br>    }<br>} <br></pre>

<br>

<ul>
  <li> 三色河內塔 Java 實作
  </li>
</ul>

<pre>public class Hanoi3Colors {    <br>    public static void help() {<br>        System.out.println(<br>              "Usage: java Hanoi3Colors number_of_disks");<br>        System.out.println(<br>      "\tnumber_of_disks: must be a number divisible by 3.");<br>        System.exit(0);<br>    }<br>    <br>    public static void main(String[] args) {<br>        int disks = 0;        <br>        try {<br>            disks = Integer.parseInt(args[0]);<br>        } catch (Exception e) {<br>            help();<br>        }<br>        if ((disks &lt;= 0) || (disks % 3 != 0)) { <br>            help(); <br>        }<br>        hanoi3colors(disks);<br>    }<br>    <br>    public static void hanoi(int disks, <br>                       char source, char temp, char target) {<br>        if (disks == 1) {<br>            System.out.println("move disk from " <br>                               + source + " to " + target);<br>            System.out.println("move disk from "<br>                               + source + " to " + target);<br>            System.out.println("move disk from "<br>                               + source + " to " + target);<br>        } else {        <br>            hanoi(disks-1, source, target, temp);<br>            hanoi(1, source, temp, target);<br>            hanoi(disks-1, temp, source, target);<br>        }<br>    }<br>    <br>    public static void hanoi3colors(int disks) {<br>        char source = 'A';<br>        char temp   = 'B';<br>        char target = 'C';<br>        if (disks == 3) {<br>            System.out.println("move disk from " <br>                            + source + " to " + temp);<br>            System.out.println("move disk from " <br>                            + source + " to " + temp);<br>            System.out.println("move disk from " <br>                            + source + " to " + target);<br>            System.out.println("move disk from " <br>                            + temp + " to " + target);<br>            System.out.println("move disk from " <br>                            + temp + " to " + source);<br>            System.out.println("move disk from " <br>                            + target + " to " + temp);<br>        } else {<br>            hanoi(disks/3-1, source, temp, target);<br>            System.out.println("move disk from " <br>                            + source + " to " + temp);<br>            System.out.println("move disk from " <br>                            + source + " to " + temp);<br>            System.out.println("move disk from " <br>                            + source + " to " + temp);<br>            hanoi(disks/3-1, target, temp, source);<br>            System.out.println("move disk from " <br>                            + temp + " to " + target);<br>            System.out.println("move disk from "<br>                            + temp + " to " + target);<br>            System.out.println("move disk from "<br>                            + temp + " to " + target);<br>            hanoi(disks/3-1, source, target, temp);<br>            System.out.println("move disk from " <br>                            + target + " to " + source);<br>            System.out.println("move disk from " <br>                            + target + " to " + source);<br>            hanoi(disks/3-1, temp, source, target);<br>            System.out.println("move disk from " <br>                            + source + " to " + temp);<br>        <br>            for (int i = disks / 3 - 1; i &gt; 0; i--) {<br>                if (i&gt;1) { <br>                    hanoi(i-1, target, source, temp); <br>                }<br>                System.out.println("move disk from " <br>                         + target + " to " + source);<br>                System.out.println("move disk from " <br>                         + target + " to " + source);<br>                if (i&gt;1) { <br>                    hanoi(i-1, temp, source, target); <br>                }<br>                System.out.println("move disk from " <br>                         + source + " to " + temp);<br>            }<br>        }<br>    }<br>} </pre>
<br>
</div>
</div>
</body>
</html>
